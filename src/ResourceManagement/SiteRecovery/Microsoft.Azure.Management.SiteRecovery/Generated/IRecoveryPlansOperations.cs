// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.SiteRecovery
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// RecoveryPlansOperations operations.
    /// </summary>
    public partial interface IRecoveryPlansOperations
    {
        /// <summary>
        /// Execute reprotect of the recovery plan.
        /// </summary>
        /// Deletes the site.
        /// <param name='recoveryPlanName'>
        /// Recovery plan name.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> ReprotectWithHttpMessagesAsync(string recoveryPlanName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Execute reprotect of the recovery plan.
        /// </summary>
        /// Deletes the site.
        /// <param name='recoveryPlanName'>
        /// Recovery plan name.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> BeginReprotectWithHttpMessagesAsync(string recoveryPlanName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Execute commit failover of the recovery plan.
        /// </summary>
        /// Deletes the site.
        /// <param name='recoveryPlanName'>
        /// Recovery plan name.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> FailoverCommitWithHttpMessagesAsync(string recoveryPlanName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Execute commit failover of the recovery plan.
        /// </summary>
        /// Deletes the site.
        /// <param name='recoveryPlanName'>
        /// Recovery plan name.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> BeginFailoverCommitWithHttpMessagesAsync(string recoveryPlanName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Execute test failover of the recovery plan.
        /// </summary>
        /// Deletes the site.
        /// <param name='recoveryPlanName'>
        /// Recovery plan name.
        /// </param>
        /// <param name='input'>
        /// Failover input.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> TestFailoverWithHttpMessagesAsync(string recoveryPlanName, RecoveryPlanTestFailoverInput input, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Execute test failover of the recovery plan.
        /// </summary>
        /// Deletes the site.
        /// <param name='recoveryPlanName'>
        /// Recovery plan name.
        /// </param>
        /// <param name='input'>
        /// Failover input.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> BeginTestFailoverWithHttpMessagesAsync(string recoveryPlanName, RecoveryPlanTestFailoverInput input, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Execute unplanned failover of the recovery plan.
        /// </summary>
        /// Deletes the site.
        /// <param name='recoveryPlanName'>
        /// Recovery plan name.
        /// </param>
        /// <param name='input'>
        /// Failover input.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> UnplannedFailoverWithHttpMessagesAsync(string recoveryPlanName, RecoveryPlanUnplannedFailoverInput input, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Execute unplanned failover of the recovery plan.
        /// </summary>
        /// Deletes the site.
        /// <param name='recoveryPlanName'>
        /// Recovery plan name.
        /// </param>
        /// <param name='input'>
        /// Failover input.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> BeginUnplannedFailoverWithHttpMessagesAsync(string recoveryPlanName, RecoveryPlanUnplannedFailoverInput input, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Execute planned failover of the recovery plan.
        /// </summary>
        /// Deletes the site.
        /// <param name='recoveryPlanName'>
        /// Recovery plan name.
        /// </param>
        /// <param name='input'>
        /// Failover input.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> PlannedFailoverWithHttpMessagesAsync(string recoveryPlanName, RecoveryPlanPlannedFailoverInput input, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Execute planned failover of the recovery plan.
        /// </summary>
        /// Deletes the site.
        /// <param name='recoveryPlanName'>
        /// Recovery plan name.
        /// </param>
        /// <param name='input'>
        /// Failover input.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> BeginPlannedFailoverWithHttpMessagesAsync(string recoveryPlanName, RecoveryPlanPlannedFailoverInput input, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the requested recovery plan.
        /// </summary>
        /// Deletes the site.
        /// <param name='recoveryPlanName'>
        /// Unique name of the recovery plan.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<RecoveryPlan>> GetWithHttpMessagesAsync(string recoveryPlanName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a recovery plan with the given details.
        /// </summary>
        /// Deletes the site.
        /// <param name='recoveryPlanName'>
        /// Recovery plan name.
        /// </param>
        /// <param name='input'>
        /// Recovery Plan creation input.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> CreateWithHttpMessagesAsync(string recoveryPlanName, CreateRecoveryPlanInput input, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Creates a recovery plan with the given details.
        /// </summary>
        /// Deletes the site.
        /// <param name='recoveryPlanName'>
        /// Recovery plan name.
        /// </param>
        /// <param name='input'>
        /// Recovery Plan creation input.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> BeginCreateWithHttpMessagesAsync(string recoveryPlanName, CreateRecoveryPlanInput input, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes the specified recovery plan.
        /// </summary>
        /// Deletes the site.
        /// <param name='recoveryPlanName'>
        /// Recovery plan name.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> DeleteWithHttpMessagesAsync(string recoveryPlanName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes the specified recovery plan.
        /// </summary>
        /// Deletes the site.
        /// <param name='recoveryPlanName'>
        /// Recovery plan name.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> BeginDeleteWithHttpMessagesAsync(string recoveryPlanName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the given recovery plan.
        /// </summary>
        /// Deletes the site.
        /// <param name='recoveryPlanName'>
        /// Recovery plan name.
        /// </param>
        /// <param name='input'>
        /// Update recovery plan input
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> UpdateWithHttpMessagesAsync(string recoveryPlanName, UpdateRecoveryPlanInput input, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Updates the given recovery plan.
        /// </summary>
        /// Deletes the site.
        /// <param name='recoveryPlanName'>
        /// Recovery plan name.
        /// </param>
        /// <param name='input'>
        /// Update recovery plan input
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> BeginUpdateWithHttpMessagesAsync(string recoveryPlanName, UpdateRecoveryPlanInput input, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the list of recovery plans.
        /// </summary>
        /// Deletes the site.
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<RecoveryPlan>>> ListWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the list of recovery plans.
        /// </summary>
        /// Deletes the site.
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<RecoveryPlan>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
