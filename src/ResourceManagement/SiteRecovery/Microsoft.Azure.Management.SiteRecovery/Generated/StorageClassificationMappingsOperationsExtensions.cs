// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.SiteRecovery
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for StorageClassificationMappingsOperations.
    /// </summary>
    public static partial class StorageClassificationMappingsOperationsExtensions
    {
            /// <summary>
            /// Tracks async operations.
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='fabricName'>
            /// Site name of interest.
            /// </param>
            /// <param name='storageClassificationName'>
            /// Name of the storage.
            /// </param>
            /// <param name='storageClassificationMappingName'>
            /// Name of the mapping object.
            /// </param>
            /// <param name='jobName'>
            /// job id to track.
            /// </param>
            public static StorageClassificationMapping GetTrackAsyncOperation(this IStorageClassificationMappingsOperations operations, string fabricName, string storageClassificationName, string storageClassificationMappingName, string jobName)
            {
                return operations.GetTrackAsyncOperationAsync(fabricName, storageClassificationName, storageClassificationMappingName, jobName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Tracks async operations.
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='fabricName'>
            /// Site name of interest.
            /// </param>
            /// <param name='storageClassificationName'>
            /// Name of the storage.
            /// </param>
            /// <param name='storageClassificationMappingName'>
            /// Name of the mapping object.
            /// </param>
            /// <param name='jobName'>
            /// job id to track.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<StorageClassificationMapping> GetTrackAsyncOperationAsync(this IStorageClassificationMappingsOperations operations, string fabricName, string storageClassificationName, string storageClassificationMappingName, string jobName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetTrackAsyncOperationWithHttpMessagesAsync(fabricName, storageClassificationName, storageClassificationMappingName, jobName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the details of a storage classification mapping.
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='fabricName'>
            /// Site name of interest.
            /// </param>
            /// <param name='storageClassificationName'>
            /// Name of the storage.
            /// </param>
            /// <param name='storageClassificationMappingName'>
            /// Name of the mapping object to be fetched.
            /// </param>
            public static StorageClassificationMapping Get(this IStorageClassificationMappingsOperations operations, string fabricName, string storageClassificationName, string storageClassificationMappingName)
            {
                return operations.GetAsync(fabricName, storageClassificationName, storageClassificationMappingName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the details of a storage classification mapping.
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='fabricName'>
            /// Site name of interest.
            /// </param>
            /// <param name='storageClassificationName'>
            /// Name of the storage.
            /// </param>
            /// <param name='storageClassificationMappingName'>
            /// Name of the mapping object to be fetched.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<StorageClassificationMapping> GetAsync(this IStorageClassificationMappingsOperations operations, string fabricName, string storageClassificationName, string storageClassificationMappingName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(fabricName, storageClassificationName, storageClassificationMappingName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Pairs two storage objects
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='fabricName'>
            /// Site name of interest.
            /// </param>
            /// <param name='storageClassificationName'>
            /// Name of the storage.
            /// </param>
            /// <param name='storageClassificationMappingName'>
            /// Name of the mapping object.
            /// </param>
            /// <param name='pairingInput'>
            /// Pairing input.
            /// </param>
            public static StorageClassificationMapping Create(this IStorageClassificationMappingsOperations operations, string fabricName, string storageClassificationName, string storageClassificationMappingName, StorageClassificationMappingInput pairingInput)
            {
                return operations.CreateAsync(fabricName, storageClassificationName, storageClassificationMappingName, pairingInput).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Pairs two storage objects
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='fabricName'>
            /// Site name of interest.
            /// </param>
            /// <param name='storageClassificationName'>
            /// Name of the storage.
            /// </param>
            /// <param name='storageClassificationMappingName'>
            /// Name of the mapping object.
            /// </param>
            /// <param name='pairingInput'>
            /// Pairing input.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<StorageClassificationMapping> CreateAsync(this IStorageClassificationMappingsOperations operations, string fabricName, string storageClassificationName, string storageClassificationMappingName, StorageClassificationMappingInput pairingInput, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(fabricName, storageClassificationName, storageClassificationMappingName, pairingInput, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Pairs two storage objects
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='fabricName'>
            /// Site name of interest.
            /// </param>
            /// <param name='storageClassificationName'>
            /// Name of the storage.
            /// </param>
            /// <param name='storageClassificationMappingName'>
            /// Name of the mapping object.
            /// </param>
            public static void Delete(this IStorageClassificationMappingsOperations operations, string fabricName, string storageClassificationName, string storageClassificationMappingName)
            {
                operations.DeleteAsync(fabricName, storageClassificationName, storageClassificationMappingName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Pairs two storage objects
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='fabricName'>
            /// Site name of interest.
            /// </param>
            /// <param name='storageClassificationName'>
            /// Name of the storage.
            /// </param>
            /// <param name='storageClassificationMappingName'>
            /// Name of the mapping object.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteAsync(this IStorageClassificationMappingsOperations operations, string fabricName, string storageClassificationName, string storageClassificationMappingName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteWithHttpMessagesAsync(fabricName, storageClassificationName, storageClassificationMappingName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets the list of storage classification mappings objects under a storage.
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='fabricName'>
            /// Site name of interest.
            /// </param>
            /// <param name='storageClassificationName'>
            /// Name of the storage classfication.
            /// </param>
            public static IPage<StorageClassificationMapping> ListByStorageClassification(this IStorageClassificationMappingsOperations operations, string fabricName, string storageClassificationName)
            {
                return operations.ListByStorageClassificationAsync(fabricName, storageClassificationName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the list of storage classification mappings objects under a storage.
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='fabricName'>
            /// Site name of interest.
            /// </param>
            /// <param name='storageClassificationName'>
            /// Name of the storage classfication.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<StorageClassificationMapping>> ListByStorageClassificationAsync(this IStorageClassificationMappingsOperations operations, string fabricName, string storageClassificationName, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByStorageClassificationWithHttpMessagesAsync(fabricName, storageClassificationName, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the list of storage classification mappings objects under a vault.
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IPage<StorageClassificationMapping> List(this IStorageClassificationMappingsOperations operations)
            {
                return operations.ListAsync().GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the list of storage classification mappings objects under a vault.
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<StorageClassificationMapping>> ListAsync(this IStorageClassificationMappingsOperations operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Pairs two storage objects
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='fabricName'>
            /// Site name of interest.
            /// </param>
            /// <param name='storageClassificationName'>
            /// Name of the storage.
            /// </param>
            /// <param name='storageClassificationMappingName'>
            /// Name of the mapping object.
            /// </param>
            /// <param name='pairingInput'>
            /// Pairing input.
            /// </param>
            public static StorageClassificationMapping BeginCreate(this IStorageClassificationMappingsOperations operations, string fabricName, string storageClassificationName, string storageClassificationMappingName, StorageClassificationMappingInput pairingInput)
            {
                return operations.BeginCreateAsync(fabricName, storageClassificationName, storageClassificationMappingName, pairingInput).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Pairs two storage objects
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='fabricName'>
            /// Site name of interest.
            /// </param>
            /// <param name='storageClassificationName'>
            /// Name of the storage.
            /// </param>
            /// <param name='storageClassificationMappingName'>
            /// Name of the mapping object.
            /// </param>
            /// <param name='pairingInput'>
            /// Pairing input.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<StorageClassificationMapping> BeginCreateAsync(this IStorageClassificationMappingsOperations operations, string fabricName, string storageClassificationName, string storageClassificationMappingName, StorageClassificationMappingInput pairingInput, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.BeginCreateWithHttpMessagesAsync(fabricName, storageClassificationName, storageClassificationMappingName, pairingInput, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Pairs two storage objects
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='fabricName'>
            /// Site name of interest.
            /// </param>
            /// <param name='storageClassificationName'>
            /// Name of the storage.
            /// </param>
            /// <param name='storageClassificationMappingName'>
            /// Name of the mapping object.
            /// </param>
            public static void BeginDelete(this IStorageClassificationMappingsOperations operations, string fabricName, string storageClassificationName, string storageClassificationMappingName)
            {
                operations.BeginDeleteAsync(fabricName, storageClassificationName, storageClassificationMappingName).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Pairs two storage objects
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='fabricName'>
            /// Site name of interest.
            /// </param>
            /// <param name='storageClassificationName'>
            /// Name of the storage.
            /// </param>
            /// <param name='storageClassificationMappingName'>
            /// Name of the mapping object.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task BeginDeleteAsync(this IStorageClassificationMappingsOperations operations, string fabricName, string storageClassificationName, string storageClassificationMappingName, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.BeginDeleteWithHttpMessagesAsync(fabricName, storageClassificationName, storageClassificationMappingName, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets the list of storage classification mappings objects under a storage.
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<StorageClassificationMapping> ListByStorageClassificationNext(this IStorageClassificationMappingsOperations operations, string nextPageLink)
            {
                return operations.ListByStorageClassificationNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the list of storage classification mappings objects under a storage.
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<StorageClassificationMapping>> ListByStorageClassificationNextAsync(this IStorageClassificationMappingsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListByStorageClassificationNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the list of storage classification mappings objects under a vault.
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            public static IPage<StorageClassificationMapping> ListNext(this IStorageClassificationMappingsOperations operations, string nextPageLink)
            {
                return operations.ListNextAsync(nextPageLink).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the list of storage classification mappings objects under a vault.
            /// </summary>
            /// <remarks>
            /// TODO (avrai): Detailed Description.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='nextPageLink'>
            /// The NextLink from the previous successful call to List operation.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IPage<StorageClassificationMapping>> ListNextAsync(this IStorageClassificationMappingsOperations operations, string nextPageLink, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListNextWithHttpMessagesAsync(nextPageLink, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
