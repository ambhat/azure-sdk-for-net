// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.SiteRecovery.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.SiteRecovery;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// VMware Azure specific enable protection input.
    /// </summary>
    public partial class InMageEnableProtectionInput : EnableProtectionProviderSpecificInput
    {
        /// <summary>
        /// Initializes a new instance of the InMageEnableProtectionInput
        /// class.
        /// </summary>
        public InMageEnableProtectionInput() { }

        /// <summary>
        /// Initializes a new instance of the InMageEnableProtectionInput
        /// class.
        /// </summary>
        /// <param name="vmFriendlyName">Gets or sets the Vm Name.</param>
        /// <param name="masterTargetId">Gets or sets the Master Target
        /// Id.</param>
        /// <param name="processServerId">Gets or sets the Process Server
        /// Id.</param>
        /// <param name="retentionDrive">Gets or sets the retention drive to
        /// use on the MT.</param>
        /// <param name="runAsAccountId">Gets or sets the CS account
        /// Id.</param>
        /// <param name="multiVmGroupId">Gets or sets the multi vm group
        /// Id.</param>
        /// <param name="multiVmGroupName">Gets or sets the multi vm group
        /// name.</param>
        /// <param name="datastoreName">Gets or sets the target datastore
        /// name.</param>
        /// <param name="diskExclusionInput">Gets or sets the enable disk
        /// exclusion input.</param>
        /// <param name="disksToInclude">Gets or sets the disks to include
        /// list.</param>
        public InMageEnableProtectionInput(string vmFriendlyName = default(string), string masterTargetId = default(string), string processServerId = default(string), string retentionDrive = default(string), string runAsAccountId = default(string), string multiVmGroupId = default(string), string multiVmGroupName = default(string), string datastoreName = default(string), InMageDiskExclusionInput diskExclusionInput = default(InMageDiskExclusionInput), IList<string> disksToInclude = default(IList<string>))
        {
            VmFriendlyName = vmFriendlyName;
            MasterTargetId = masterTargetId;
            ProcessServerId = processServerId;
            RetentionDrive = retentionDrive;
            RunAsAccountId = runAsAccountId;
            MultiVmGroupId = multiVmGroupId;
            MultiVmGroupName = multiVmGroupName;
            DatastoreName = datastoreName;
            DiskExclusionInput = diskExclusionInput;
            DisksToInclude = disksToInclude;
        }

        /// <summary>
        /// Gets or sets the Vm Name.
        /// </summary>
        [JsonProperty(PropertyName = "vmFriendlyName")]
        public string VmFriendlyName { get; set; }

        /// <summary>
        /// Gets or sets the Master Target Id.
        /// </summary>
        [JsonProperty(PropertyName = "masterTargetId")]
        public string MasterTargetId { get; set; }

        /// <summary>
        /// Gets or sets the Process Server Id.
        /// </summary>
        [JsonProperty(PropertyName = "processServerId")]
        public string ProcessServerId { get; set; }

        /// <summary>
        /// Gets or sets the retention drive to use on the MT.
        /// </summary>
        [JsonProperty(PropertyName = "retentionDrive")]
        public string RetentionDrive { get; set; }

        /// <summary>
        /// Gets or sets the CS account Id.
        /// </summary>
        [JsonProperty(PropertyName = "runAsAccountId")]
        public string RunAsAccountId { get; set; }

        /// <summary>
        /// Gets or sets the multi vm group Id.
        /// </summary>
        [JsonProperty(PropertyName = "multiVmGroupId")]
        public string MultiVmGroupId { get; set; }

        /// <summary>
        /// Gets or sets the multi vm group name.
        /// </summary>
        [JsonProperty(PropertyName = "multiVmGroupName")]
        public string MultiVmGroupName { get; set; }

        /// <summary>
        /// Gets or sets the target datastore name.
        /// </summary>
        [JsonProperty(PropertyName = "datastoreName")]
        public string DatastoreName { get; set; }

        /// <summary>
        /// Gets or sets the enable disk exclusion input.
        /// </summary>
        [JsonProperty(PropertyName = "diskExclusionInput")]
        public InMageDiskExclusionInput DiskExclusionInput { get; set; }

        /// <summary>
        /// Gets or sets the disks to include list.
        /// </summary>
        [JsonProperty(PropertyName = "disksToInclude")]
        public IList<string> DisksToInclude { get; set; }

    }
}
