// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.SiteRecovery.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Microsoft.Rest.Azure;

    /// <summary>
    /// InMage protected disk details.
    /// </summary>
    public partial class InMageProtectedDiskDetails
    {
        /// <summary>
        /// Initializes a new instance of the InMageProtectedDiskDetails class.
        /// </summary>
        public InMageProtectedDiskDetails() { }

        /// <summary>
        /// Initializes a new instance of the InMageProtectedDiskDetails class.
        /// </summary>
        public InMageProtectedDiskDetails(string diskId = default(string), string diskName = default(string), string protectionStage = default(string), string healthErrorCode = default(string), long? rpoInSeconds = default(long?), string resyncRequired = default(string), int? resyncProgressPercentage = default(int?), long? resyncDurationInSeconds = default(long?), long? diskCapacityInBytes = default(long?), long? fileSystemCapacityInBytes = default(long?), double? sourceDataInMB = default(double?), double? psDataInMB = default(double?), double? targetDataInMB = default(double?), string diskResized = default(string))
        {
            DiskId = diskId;
            DiskName = diskName;
            ProtectionStage = protectionStage;
            HealthErrorCode = healthErrorCode;
            RpoInSeconds = rpoInSeconds;
            ResyncRequired = resyncRequired;
            ResyncProgressPercentage = resyncProgressPercentage;
            ResyncDurationInSeconds = resyncDurationInSeconds;
            DiskCapacityInBytes = diskCapacityInBytes;
            FileSystemCapacityInBytes = fileSystemCapacityInBytes;
            SourceDataInMB = sourceDataInMB;
            PsDataInMB = psDataInMB;
            TargetDataInMB = targetDataInMB;
            DiskResized = diskResized;
        }

        /// <summary>
        /// Gets or sets the disk id.
        /// </summary>
        [JsonProperty(PropertyName = "diskId")]
        public string DiskId { get; set; }

        /// <summary>
        /// Gets or sets the disk name.
        /// </summary>
        [JsonProperty(PropertyName = "diskName")]
        public string DiskName { get; set; }

        /// <summary>
        /// Gets or sets the protection stage.
        /// </summary>
        [JsonProperty(PropertyName = "protectionStage")]
        public string ProtectionStage { get; set; }

        /// <summary>
        /// Gets or sets the health error code for the disk.
        /// </summary>
        [JsonProperty(PropertyName = "healthErrorCode")]
        public string HealthErrorCode { get; set; }

        /// <summary>
        /// Gets or sets the RPO in seconds.
        /// </summary>
        [JsonProperty(PropertyName = "rpoInSeconds")]
        public long? RpoInSeconds { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether resync is required for
        /// this disk.
        /// </summary>
        [JsonProperty(PropertyName = "resyncRequired")]
        public string ResyncRequired { get; set; }

        /// <summary>
        /// Gets or sets the resync progress percentage.
        /// </summary>
        [JsonProperty(PropertyName = "resyncProgressPercentage")]
        public int? ResyncProgressPercentage { get; set; }

        /// <summary>
        /// Gets or sets the resync duration in seconds.
        /// </summary>
        [JsonProperty(PropertyName = "resyncDurationInSeconds")]
        public long? ResyncDurationInSeconds { get; set; }

        /// <summary>
        /// Gets or sets the disk capacity in bytes.
        /// </summary>
        [JsonProperty(PropertyName = "diskCapacityInBytes")]
        public long? DiskCapacityInBytes { get; set; }

        /// <summary>
        /// Gets or sets the file system capacity in bytes.
        /// </summary>
        [JsonProperty(PropertyName = "fileSystemCapacityInBytes")]
        public long? FileSystemCapacityInBytes { get; set; }

        /// <summary>
        /// Gets or sets the source data transit in MB.
        /// </summary>
        [JsonProperty(PropertyName = "sourceDataInMB")]
        public double? SourceDataInMB { get; set; }

        /// <summary>
        /// Gets or sets the PS data transit in MB.
        /// </summary>
        [JsonProperty(PropertyName = "psDataInMB")]
        public double? PsDataInMB { get; set; }

        /// <summary>
        /// Gets or sets the target data transit in MB.
        /// </summary>
        [JsonProperty(PropertyName = "targetDataInMB")]
        public double? TargetDataInMB { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether disk is resized.
        /// </summary>
        [JsonProperty(PropertyName = "diskResized")]
        public string DiskResized { get; set; }

    }
}
