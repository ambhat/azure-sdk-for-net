// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.SiteRecovery.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.SiteRecovery;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// vCenter definition.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class VCenter : Resource
    {
        /// <summary>
        /// Initializes a new instance of the VCenter class.
        /// </summary>
        public VCenter() { }

        /// <summary>
        /// Initializes a new instance of the VCenter class.
        /// </summary>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource Name</param>
        /// <param name="type">Resource Type</param>
        /// <param name="location">Resource Location</param>
        /// <param name="friendlyName">Gets or sets Friendly name of the
        /// vCenter.</param>
        /// <param name="internalId">Gets or sets vCenter internal ID.</param>
        /// <param name="lastHeartbeat">Gets or sets the time when the last
        /// heartbeat was reveived by vCenter.</param>
        /// <param name="discoveryStatus">Gets or sets the VCenter discovery
        /// status.</param>
        /// <param name="processServerId">Gets or sets the process server
        /// Id.</param>
        /// <param name="ipAddress">Gets or sets the IP address of the
        /// vCenter.</param>
        /// <param name="infrastructureId">Gets or sets the infrastructure Id
        /// of vCenter.</param>
        /// <param name="port">Gets or sets the port number for
        /// discovery.</param>
        /// <param name="runAsAccountId">Gets or sets the account Id which has
        /// privileges to discover the vCenter.</param>
        /// <param name="fabricArmResourceName">Gets or sets the ARM resource
        /// name of the fabric containing this VCenter.</param>
        public VCenter(string id = default(string), string name = default(string), string type = default(string), string location = default(string), string friendlyName = default(string), string internalId = default(string), System.DateTime? lastHeartbeat = default(System.DateTime?), string discoveryStatus = default(string), string processServerId = default(string), string ipAddress = default(string), string infrastructureId = default(string), string port = default(string), string runAsAccountId = default(string), string fabricArmResourceName = default(string))
            : base(id, name, type, location)
        {
            FriendlyName = friendlyName;
            InternalId = internalId;
            LastHeartbeat = lastHeartbeat;
            DiscoveryStatus = discoveryStatus;
            ProcessServerId = processServerId;
            IpAddress = ipAddress;
            InfrastructureId = infrastructureId;
            Port = port;
            RunAsAccountId = runAsAccountId;
            FabricArmResourceName = fabricArmResourceName;
        }

        /// <summary>
        /// Gets or sets Friendly name of the vCenter.
        /// </summary>
        [JsonProperty(PropertyName = "properties.friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets or sets vCenter internal ID.
        /// </summary>
        [JsonProperty(PropertyName = "properties.internalId")]
        public string InternalId { get; set; }

        /// <summary>
        /// Gets or sets the time when the last heartbeat was reveived by
        /// vCenter.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastHeartbeat")]
        public System.DateTime? LastHeartbeat { get; set; }

        /// <summary>
        /// Gets or sets the VCenter discovery status.
        /// </summary>
        [JsonProperty(PropertyName = "properties.discoveryStatus")]
        public string DiscoveryStatus { get; set; }

        /// <summary>
        /// Gets or sets the process server Id.
        /// </summary>
        [JsonProperty(PropertyName = "properties.processServerId")]
        public string ProcessServerId { get; set; }

        /// <summary>
        /// Gets or sets the IP address of the vCenter.
        /// </summary>
        [JsonProperty(PropertyName = "properties.ipAddress")]
        public string IpAddress { get; set; }

        /// <summary>
        /// Gets or sets the infrastructure Id of vCenter.
        /// </summary>
        [JsonProperty(PropertyName = "properties.infrastructureId")]
        public string InfrastructureId { get; set; }

        /// <summary>
        /// Gets or sets the port number for discovery.
        /// </summary>
        [JsonProperty(PropertyName = "properties.port")]
        public string Port { get; set; }

        /// <summary>
        /// Gets or sets the account Id which has privileges to discover the
        /// vCenter.
        /// </summary>
        [JsonProperty(PropertyName = "properties.runAsAccountId")]
        public string RunAsAccountId { get; set; }

        /// <summary>
        /// Gets or sets the ARM resource name of the fabric containing this
        /// VCenter.
        /// </summary>
        [JsonProperty(PropertyName = "properties.fabricArmResourceName")]
        public string FabricArmResourceName { get; set; }

    }
}
