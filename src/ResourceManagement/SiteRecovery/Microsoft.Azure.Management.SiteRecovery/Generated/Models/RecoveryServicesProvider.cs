// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.SiteRecovery.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.SiteRecovery;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Provider details.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class RecoveryServicesProvider : Resource
    {
        /// <summary>
        /// Initializes a new instance of the RecoveryServicesProvider class.
        /// </summary>
        public RecoveryServicesProvider() { }

        /// <summary>
        /// Initializes a new instance of the RecoveryServicesProvider class.
        /// </summary>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource Name</param>
        /// <param name="type">Resource Type</param>
        /// <param name="location">Resource Location</param>
        /// <param name="fabricType">Gets or sets type of the site.</param>
        /// <param name="friendlyName">Gets or sets Friendly name of the
        /// DRA.</param>
        /// <param name="providerVersion">Gets or sets the provider
        /// version.</param>
        /// <param name="serverVersion">Gets or sets the fabric
        /// provider.</param>
        /// <param name="providerVersionState">Gets or sets DRA version
        /// status.</param>
        /// <param name="providerVersionExpiryDate">Gets or sets Expiry date if
        /// the version is deprecated.</param>
        /// <param name="fabricFriendlyName">Gets or sets the fabric friendly
        /// name.</param>
        /// <param name="lastHeartBeat">Gets or sets Time when last heartbeat
        /// was sent by the DRA.</param>
        /// <param name="connectionStatus">Gets or sets a value indicating
        /// whether DRA is responsive.</param>
        /// <param name="protectedItemCount">Gets or sets Number of protected
        /// VMs currently managed by the DRA.</param>
        /// <param name="allowedScenarios">Gets or sets the scenarions allowed
        /// on this provider.</param>
        public RecoveryServicesProvider(string id = default(string), string name = default(string), string type = default(string), string location = default(string), string fabricType = default(string), string friendlyName = default(string), string providerVersion = default(string), string serverVersion = default(string), string providerVersionState = default(string), System.DateTime? providerVersionExpiryDate = default(System.DateTime?), string fabricFriendlyName = default(string), System.DateTime? lastHeartBeat = default(System.DateTime?), string connectionStatus = default(string), int? protectedItemCount = default(int?), IList<string> allowedScenarios = default(IList<string>))
            : base(id, name, type, location)
        {
            FabricType = fabricType;
            FriendlyName = friendlyName;
            ProviderVersion = providerVersion;
            ServerVersion = serverVersion;
            ProviderVersionState = providerVersionState;
            ProviderVersionExpiryDate = providerVersionExpiryDate;
            FabricFriendlyName = fabricFriendlyName;
            LastHeartBeat = lastHeartBeat;
            ConnectionStatus = connectionStatus;
            ProtectedItemCount = protectedItemCount;
            AllowedScenarios = allowedScenarios;
        }

        /// <summary>
        /// Gets or sets type of the site.
        /// </summary>
        [JsonProperty(PropertyName = "properties.fabricType")]
        public string FabricType { get; set; }

        /// <summary>
        /// Gets or sets Friendly name of the DRA.
        /// </summary>
        [JsonProperty(PropertyName = "properties.friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets or sets the provider version.
        /// </summary>
        [JsonProperty(PropertyName = "properties.providerVersion")]
        public string ProviderVersion { get; set; }

        /// <summary>
        /// Gets or sets the fabric provider.
        /// </summary>
        [JsonProperty(PropertyName = "properties.serverVersion")]
        public string ServerVersion { get; set; }

        /// <summary>
        /// Gets or sets DRA version status.
        /// </summary>
        [JsonProperty(PropertyName = "properties.providerVersionState")]
        public string ProviderVersionState { get; set; }

        /// <summary>
        /// Gets or sets Expiry date if the version is deprecated.
        /// </summary>
        [JsonProperty(PropertyName = "properties.providerVersionExpiryDate")]
        public System.DateTime? ProviderVersionExpiryDate { get; set; }

        /// <summary>
        /// Gets or sets the fabric friendly name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.fabricFriendlyName")]
        public string FabricFriendlyName { get; set; }

        /// <summary>
        /// Gets or sets Time when last heartbeat was sent by the DRA.
        /// </summary>
        [JsonProperty(PropertyName = "properties.lastHeartBeat")]
        public System.DateTime? LastHeartBeat { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether DRA is responsive.
        /// </summary>
        [JsonProperty(PropertyName = "properties.connectionStatus")]
        public string ConnectionStatus { get; set; }

        /// <summary>
        /// Gets or sets Number of protected VMs currently managed by the DRA.
        /// </summary>
        [JsonProperty(PropertyName = "properties.protectedItemCount")]
        public int? ProtectedItemCount { get; set; }

        /// <summary>
        /// Gets or sets the scenarions allowed on this provider.
        /// </summary>
        [JsonProperty(PropertyName = "properties.allowedScenarios")]
        public IList<string> AllowedScenarios { get; set; }

    }
}
