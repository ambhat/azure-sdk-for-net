// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.SiteRecovery.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.SiteRecovery;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Deploy Process Server request properties.
    /// </summary>
    public partial class DeployProcessServerRequestProperties
    {
        /// <summary>
        /// Initializes a new instance of the
        /// DeployProcessServerRequestProperties class.
        /// </summary>
        public DeployProcessServerRequestProperties() { }

        /// <summary>
        /// Initializes a new instance of the
        /// DeployProcessServerRequestProperties class.
        /// </summary>
        /// <param name="subscriptionId">Gets or sets the subscription
        /// Id.</param>
        /// <param name="vaultLocation">Gets or sets the vault
        /// location.</param>
        /// <param name="friendlyName">Gets or sets the process server
        /// name.</param>
        /// <param name="userName">Gets or sets the user name.</param>
        /// <param name="password">Gets or sets the password.</param>
        /// <param name="ipAddress">Gets or sets the ip address.</param>
        /// <param name="azureNetworkName">Gets or sets the azure network
        /// name.</param>
        /// <param name="azureNetworkSubnet">Gets or sets the azure network
        /// subnet.</param>
        public DeployProcessServerRequestProperties(string subscriptionId = default(string), string vaultLocation = default(string), string friendlyName = default(string), string userName = default(string), string password = default(string), string ipAddress = default(string), string azureNetworkName = default(string), string azureNetworkSubnet = default(string))
        {
            SubscriptionId = subscriptionId;
            VaultLocation = vaultLocation;
            FriendlyName = friendlyName;
            UserName = userName;
            Password = password;
            IpAddress = ipAddress;
            AzureNetworkName = azureNetworkName;
            AzureNetworkSubnet = azureNetworkSubnet;
        }

        /// <summary>
        /// Gets or sets the subscription Id.
        /// </summary>
        [JsonProperty(PropertyName = "subscriptionId")]
        public string SubscriptionId { get; set; }

        /// <summary>
        /// Gets or sets the vault location.
        /// </summary>
        [JsonProperty(PropertyName = "vaultLocation")]
        public string VaultLocation { get; set; }

        /// <summary>
        /// Gets or sets the process server name.
        /// </summary>
        [JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets or sets the user name.
        /// </summary>
        [JsonProperty(PropertyName = "userName")]
        public string UserName { get; set; }

        /// <summary>
        /// Gets or sets the password.
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

        /// <summary>
        /// Gets or sets the ip address.
        /// </summary>
        [JsonProperty(PropertyName = "ipAddress")]
        public string IpAddress { get; set; }

        /// <summary>
        /// Gets or sets the azure network name.
        /// </summary>
        [JsonProperty(PropertyName = "azureNetworkName")]
        public string AzureNetworkName { get; set; }

        /// <summary>
        /// Gets or sets the azure network subnet.
        /// </summary>
        [JsonProperty(PropertyName = "azureNetworkSubnet")]
        public string AzureNetworkSubnet { get; set; }

    }
}
