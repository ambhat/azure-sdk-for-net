// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.SiteRecovery.Models
{
    using Microsoft.Azure;
    using Microsoft.Azure.Management;
    using Microsoft.Azure.Management.SiteRecovery;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Implements the Event class.
    /// </summary>
    [Rest.Serialization.JsonTransformation]
    public partial class EventModel : Resource
    {
        /// <summary>
        /// Initializes a new instance of the EventModel class.
        /// </summary>
        public EventModel() { }

        /// <summary>
        /// Initializes a new instance of the EventModel class.
        /// </summary>
        /// <param name="id">Resource Id</param>
        /// <param name="name">Resource Name</param>
        /// <param name="type">Resource Type</param>
        /// <param name="location">Resource Location</param>
        /// <param name="eventCode">Gets or sets the Id of the monitoring
        /// event.</param>
        /// <param name="description">Gets or sets the event name.</param>
        /// <param name="eventType">Gets or sets the type of the event.
        /// for example: VM Health, Server Health, Job Failure etc.</param>
        /// <param name="affectedObjectFriendlyName">Gets or sets the friendly
        /// name of the source of the event on which it
        /// is raised (for example, VM, VMM etc).</param>
        /// <param name="severity">Gets or sets the severity of the
        /// event.</param>
        /// <param name="timeOfOccurrence">Gets or sets the time of occurence
        /// of the event.</param>
        /// <param name="fabricId">Gets or sets the ARM ID of the
        /// fabric.</param>
        /// <param name="providerSpecificDetails">Gets or sets the provider
        /// specific settings.</param>
        /// <param name="eventSpecificDetails">Gets or sets the event specific
        /// settings.</param>
        /// <param name="healthErrors">Gets or sets the list of errors /
        /// warnings capturing details associated with the
        /// issue(s).</param>
        public EventModel(string id = default(string), string name = default(string), string type = default(string), string location = default(string), string eventCode = default(string), string description = default(string), string eventType = default(string), string affectedObjectFriendlyName = default(string), string severity = default(string), System.DateTime? timeOfOccurrence = default(System.DateTime?), string fabricId = default(string), EventProviderSpecificDetails providerSpecificDetails = default(EventProviderSpecificDetails), EventSpecificDetails eventSpecificDetails = default(EventSpecificDetails), IList<HealthError> healthErrors = default(IList<HealthError>))
            : base(id, name, type, location)
        {
            EventCode = eventCode;
            Description = description;
            EventType = eventType;
            AffectedObjectFriendlyName = affectedObjectFriendlyName;
            Severity = severity;
            TimeOfOccurrence = timeOfOccurrence;
            FabricId = fabricId;
            ProviderSpecificDetails = providerSpecificDetails;
            EventSpecificDetails = eventSpecificDetails;
            HealthErrors = healthErrors;
        }

        /// <summary>
        /// Gets or sets the Id of the monitoring event.
        /// </summary>
        [JsonProperty(PropertyName = "properties.eventCode")]
        public string EventCode { get; set; }

        /// <summary>
        /// Gets or sets the event name.
        /// </summary>
        [JsonProperty(PropertyName = "properties.description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the type of the event.
        /// for example: VM Health, Server Health, Job Failure etc.
        /// </summary>
        [JsonProperty(PropertyName = "properties.eventType")]
        public string EventType { get; set; }

        /// <summary>
        /// Gets or sets the friendly name of the source of the event on which
        /// it
        /// is raised (for example, VM, VMM etc).
        /// </summary>
        [JsonProperty(PropertyName = "properties.affectedObjectFriendlyName")]
        public string AffectedObjectFriendlyName { get; set; }

        /// <summary>
        /// Gets or sets the severity of the event.
        /// </summary>
        [JsonProperty(PropertyName = "properties.severity")]
        public string Severity { get; set; }

        /// <summary>
        /// Gets or sets the time of occurence of the event.
        /// </summary>
        [JsonProperty(PropertyName = "properties.timeOfOccurrence")]
        public System.DateTime? TimeOfOccurrence { get; set; }

        /// <summary>
        /// Gets or sets the ARM ID of the fabric.
        /// </summary>
        [JsonProperty(PropertyName = "properties.fabricId")]
        public string FabricId { get; set; }

        /// <summary>
        /// Gets or sets the provider specific settings.
        /// </summary>
        [JsonProperty(PropertyName = "properties.providerSpecificDetails")]
        public EventProviderSpecificDetails ProviderSpecificDetails { get; set; }

        /// <summary>
        /// Gets or sets the event specific settings.
        /// </summary>
        [JsonProperty(PropertyName = "properties.eventSpecificDetails")]
        public EventSpecificDetails EventSpecificDetails { get; set; }

        /// <summary>
        /// Gets or sets the list of errors / warnings capturing details
        /// associated with the
        /// issue(s).
        /// </summary>
        [JsonProperty(PropertyName = "properties.healthErrors")]
        public IList<HealthError> HealthErrors { get; set; }

    }
}
