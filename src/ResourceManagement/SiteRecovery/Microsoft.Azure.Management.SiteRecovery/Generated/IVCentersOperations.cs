// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Microsoft.Azure.Management.SiteRecovery
{
    using System;
    using System.Collections.Generic;
    using System.Net.Http;
    using System.Threading;
    using System.Threading.Tasks;
    using Microsoft.Rest;
    using Microsoft.Rest.Azure;
    using Models;

    /// <summary>
    /// VCentersOperations operations.
    /// </summary>
    public partial interface IVCentersOperations
    {
        /// <summary>
        /// Tracks the provider async operation.
        /// </summary>
        /// Deletes the site.
        /// <param name='fabricName'>
        /// fabric name.
        /// </param>
        /// <param name='vCenterName'>
        /// vCenter name to work on.
        /// </param>
        /// <param name='jobName'>
        /// job name to track.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VCenter>> TrackAsyncOperationWithHttpMessagesAsync(string fabricName, string vCenterName, string jobName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the details of a vCenter.
        /// </summary>
        /// Deletes the site.
        /// <param name='fabricName'>
        /// The name of the fabric containing the vCenter.
        /// </param>
        /// <param name='vCenterName'>
        /// vCenter name of interest.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VCenter>> GetWithHttpMessagesAsync(string fabricName, string vCenterName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Perform Add vCenter operation.
        /// </summary>
        /// Deletes the site.
        /// <param name='fabricName'>
        /// The name of the fabric containing the vCenter.
        /// </param>
        /// <param name='vCenterName'>
        /// The name of the vCenter.
        /// </param>
        /// <param name='addVCenterRequest'>
        /// The input to the add vCenter operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VCenter>> CreateWithHttpMessagesAsync(string fabricName, string vCenterName, AddVCenterRequest addVCenterRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Perform Add vCenter operation.
        /// </summary>
        /// Deletes the site.
        /// <param name='fabricName'>
        /// The name of the fabric containing the vCenter.
        /// </param>
        /// <param name='vCenterName'>
        /// The name of the vCenter.
        /// </param>
        /// <param name='addVCenterRequest'>
        /// The input to the add vCenter operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VCenter>> BeginCreateWithHttpMessagesAsync(string fabricName, string vCenterName, AddVCenterRequest addVCenterRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Perform remove vCenter operation.
        /// </summary>
        /// Deletes the site.
        /// <param name='fabricName'>
        /// The name of the fabric containing the vCenter.
        /// </param>
        /// <param name='vCenterName'>
        /// The name of the vCenter which is to be removed.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> DeleteWithHttpMessagesAsync(string fabricName, string vCenterName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Perform remove vCenter operation.
        /// </summary>
        /// Deletes the site.
        /// <param name='fabricName'>
        /// The name of the fabric containing the vCenter.
        /// </param>
        /// <param name='vCenterName'>
        /// The name of the vCenter which is to be removed.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse> BeginDeleteWithHttpMessagesAsync(string fabricName, string vCenterName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Perform update vCenter operation.
        /// </summary>
        /// Deletes the site.
        /// <param name='fabricName'>
        /// The name of the fabric containing the process server.
        /// </param>
        /// <param name='vCenterName'>
        /// The name of the vCenter which is to be updated.
        /// </param>
        /// <param name='updateVCenterRequest'>
        /// The input for update vCenter operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VCenter>> UpdateWithHttpMessagesAsync(string fabricName, string vCenterName, UpdateVCenterRequest updateVCenterRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Perform update vCenter operation.
        /// </summary>
        /// Deletes the site.
        /// <param name='fabricName'>
        /// The name of the fabric containing the process server.
        /// </param>
        /// <param name='vCenterName'>
        /// The name of the vCenter which is to be updated.
        /// </param>
        /// <param name='updateVCenterRequest'>
        /// The input for update vCenter operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<VCenter>> BeginUpdateWithHttpMessagesAsync(string fabricName, string vCenterName, UpdateVCenterRequest updateVCenterRequest, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the list of vCenter registered under a fabric.
        /// </summary>
        /// Deletes the site.
        /// <param name='fabricName'>
        /// Fabric name of interest.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<VCenter>>> ListByFabricWithHttpMessagesAsync(string fabricName, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the list of vCenter registered under the vault.
        /// </summary>
        /// Deletes the site.
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<VCenter>>> ListWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the list of vCenter registered under a fabric.
        /// </summary>
        /// Deletes the site.
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<VCenter>>> ListByFabricNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets the list of vCenter registered under the vault.
        /// </summary>
        /// Deletes the site.
        /// <param name='nextPageLink'>
        /// The NextLink from the previous successful call to List operation.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<AzureOperationResponse<IPage<VCenter>>> ListNextWithHttpMessagesAsync(string nextPageLink, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
